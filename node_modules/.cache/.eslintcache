[{"D:\\Projetos\\crud\\src\\index.js":"1","D:\\Projetos\\crud\\src\\pages\\home.jsx":"2","D:\\Projetos\\crud\\src\\context\\context.jsx":"3","D:\\Projetos\\crud\\src\\pages\\Home.jsx":"4","D:\\Projetos\\crud\\src\\styled\\Home.jsx":"5","D:\\Projetos\\crud\\src\\pages\\SignUp.jsx":"6","D:\\Projetos\\crud\\src\\styled\\SignUp.jsx":"7","D:\\Projetos\\crud\\src\\pages\\SignIn.jsx":"8","D:\\Projetos\\crud\\src\\api.jsx":"9","D:\\Projetos\\crud\\src\\styled\\SignIn.jsx":"10","D:\\Projetos\\crud\\src\\app.jsx":"11","D:\\Projetos\\crud\\src\\components\\Modal.jsx":"12"},{"size":442,"mtime":1654715079432,"results":"13","hashOfConfig":"14"},{"size":98,"mtime":1654642547807,"results":"15","hashOfConfig":"14"},{"size":4211,"mtime":1654811852233,"results":"16","hashOfConfig":"14"},{"size":2498,"mtime":1654812879037,"results":"17","hashOfConfig":"14"},{"size":1569,"mtime":1654734163096,"results":"18","hashOfConfig":"14"},{"size":1920,"mtime":1654717862854,"results":"19","hashOfConfig":"14"},{"size":1000,"mtime":1654717868802,"results":"20","hashOfConfig":"14"},{"size":1703,"mtime":1654718275433,"results":"21","hashOfConfig":"14"},{"size":134,"mtime":1654718106808,"results":"22","hashOfConfig":"14"},{"size":997,"mtime":1654647626633,"results":"23","hashOfConfig":"14"},{"size":836,"mtime":1654726691079,"results":"24","hashOfConfig":"14"},{"size":3364,"mtime":1654813177196,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1pfjqej",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projetos\\crud\\src\\index.js",[],[],[],"D:\\Projetos\\crud\\src\\pages\\home.jsx",[],[],"D:\\Projetos\\crud\\src\\context\\context.jsx",["65"],[],"D:\\Projetos\\crud\\src\\pages\\Home.jsx",["66"],[],"D:\\Projetos\\crud\\src\\styled\\Home.jsx",[],[],"D:\\Projetos\\crud\\src\\pages\\SignUp.jsx",[],[],"D:\\Projetos\\crud\\src\\styled\\SignUp.jsx",[],[],"D:\\Projetos\\crud\\src\\pages\\SignIn.jsx",["67","68"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UseDataContext } from \"../context/context\";\r\nimport {\r\n  Body,\r\n  Container,\r\n  Input,\r\n  ContainerInput,\r\n  ContainerButton,\r\n  Button,\r\n  TextLogin,\r\n  Text,\r\n} from \"../styled/SignIn\";\r\n\r\nexport default function SignInPage() {\r\n  const navigate = useNavigate();\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [message, setMessage] = useState(false);\r\n  const { handleLogin, auth, setAuth } = UseDataContext();\r\n\r\n  async function handleSignin() {\r\n    setMessage(false);\r\n    const login = await handleLogin(username, password);\r\n\r\n    if (login) {\r\n      setAuth(true);\r\n      navigate(\"/\");\r\n    } else {\r\n      setMessage(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Body>\r\n        <ContainerInput>\r\n          <Input\r\n            placeholder=\"Usuario\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <Input\r\n            placeholder=\"Senha\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </ContainerInput>\r\n        <ContainerButton>\r\n          {message && (\r\n            <TextLogin style={{ color: \"red\" }}>\r\n              Email ou senha incorreta!\r\n            </TextLogin>\r\n          )}\r\n          <TextLogin>\r\n            Nao possui conta ? <Text to=\"/signup\">Cadastrar</Text>\r\n          </TextLogin>\r\n          <Button onClick={handleSignin}>Entrar</Button>\r\n        </ContainerButton>\r\n      </Body>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Projetos\\crud\\src\\api.jsx",[],[],"D:\\Projetos\\crud\\src\\styled\\SignIn.jsx",[],[],"D:\\Projetos\\crud\\src\\app.jsx",["69"],[],"import { Route, Routes } from \"react-router-dom\";\r\nimport HomePage from \"./pages/Home\";\r\nimport SignInPage from \"./pages/SignIn\";\r\nimport SignUpPage from \"./pages/SignUp\";\r\nimport { useEffect } from \"react\";\r\nimport { UseDataContext } from \"./context/context\";\r\n\r\nexport default function App() {\r\n  const { auth, checkToken, setUser } = UseDataContext();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        const dados = await checkToken(token);\r\n        setUser(dados.data.username);\r\n      }\r\n    })();\r\n  }, [auth]);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" end element={auth ? <HomePage /> : <SignInPage />} />\r\n      <Route path=\"/signin\" element={<SignInPage />} />\r\n      <Route path=\"/signup\" element={<SignUpPage />} />\r\n    </Routes>\r\n  );\r\n}\r\n","D:\\Projetos\\crud\\src\\components\\Modal.jsx",["70"],[],{"ruleId":"71","severity":1,"message":"72","line":35,"column":15,"nodeType":"73","messageId":"74","endLine":35,"endColumn":20},{"ruleId":"71","severity":1,"message":"75","line":39,"column":13,"nodeType":"73","messageId":"74","endLine":39,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"77","line":20,"column":24,"nodeType":"73","messageId":"74","endLine":20,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":19,"column":6,"nodeType":"80","endLine":19,"endColumn":12,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":19,"column":6,"nodeType":"80","endLine":19,"endColumn":12,"suggestions":"83"},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'dados' is assigned a value but never used.","'useEffect' is defined but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkToken' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has missing dependencies: 'data.body', 'data.description', and 'data.title'. Either include them or remove the dependency array. If 'setTitle' needs the current value of 'data.title', you can also switch to useReducer instead of useState and read 'data.title' in the reducer.",["85"],{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [auth, checkToken, setUser]",{"range":"90","text":"91"},"Update the dependencies array to be: [data.body, data.description, data.title, edit]",{"range":"92","text":"93"},[583,589],"[auth, checkToken, setUser]",[635,641],"[data.body, data.description, data.title, edit]"]