{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\crud\\\\src\\\\pages\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UseDataContext } from \"../context/context\";\nimport { Body, Container, Input, ContainerInput, ContainerButton, Button, TextLogin, Text } from \"../styled/SignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [message, setMessage] = useState(false);\n  const {\n    handleResgister\n  } = UseDataContext();\n\n  async function handleSignUp() {\n    setMessage(false);\n    const register = await handleResgister(email, username, password);\n\n    if (register.response.data.error) {\n      setMessage(true);\n    } else {\n      navigate(\"/signin\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(ContainerInput, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Usuario\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Senha\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContainerButton, {\n        children: [message && /*#__PURE__*/_jsxDEV(TextLogin, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Email ja existe!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextLogin, {\n          children: [\"Ja possui conta ? \", /*#__PURE__*/_jsxDEV(Text, {\n            to: \"/signin\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSignUp,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpPage, \"aigTna/mnQ6OeMrwfa3DOk7kq5o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","useNavigate","UseDataContext","Body","Container","Input","ContainerInput","ContainerButton","Button","TextLogin","Text","SignUpPage","navigate","email","setEmail","username","setUserName","password","setPassword","message","setMessage","handleResgister","handleSignUp","register","response","data","error","e","target","value","color"],"sources":["D:/Projetos/crud/src/pages/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UseDataContext } from \"../context/context\";\r\nimport {\r\n  Body,\r\n  Container,\r\n  Input,\r\n  ContainerInput,\r\n  ContainerButton,\r\n  Button,\r\n  TextLogin,\r\n  Text,\r\n} from \"../styled/SignUp\";\r\n\r\nexport default function SignUpPage() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState();\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [message, setMessage] = useState(false);\r\n  const { handleResgister } = UseDataContext();\r\n\r\n  async function handleSignUp() {\r\n    setMessage(false);\r\n    const register = await handleResgister(email, username, password);\r\n    if (register.response.data.error) {\r\n      setMessage(true);\r\n    } else {\r\n      navigate(\"/signin\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Body>\r\n        <ContainerInput>\r\n          <Input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Input\r\n            placeholder=\"Usuario\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <Input\r\n            placeholder=\"Senha\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </ContainerInput>\r\n        <ContainerButton>\r\n          {message && (\r\n            <TextLogin style={{ color: \"red\" }}>Email ja existe!</TextLogin>\r\n          )}\r\n          <TextLogin>\r\n            Ja possui conta ? <Text to=\"/signin\">Entrar</Text>\r\n          </TextLogin>\r\n          <Button onClick={handleSignUp}>Cadastrar</Button>\r\n        </ContainerButton>\r\n      </Body>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,IARF,QASO,kBATP;;AAWA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;EACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;EACA,MAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM;IAAEqB;EAAF,IAAsBnB,cAAc,EAA1C;;EAEA,eAAeoB,YAAf,GAA8B;IAC5BF,UAAU,CAAC,KAAD,CAAV;IACA,MAAMG,QAAQ,GAAG,MAAMF,eAAe,CAACR,KAAD,EAAQE,QAAR,EAAkBE,QAAlB,CAAtC;;IACA,IAAIM,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAA3B,EAAkC;MAChCN,UAAU,CAAC,IAAD,CAAV;IACD,CAFD,MAEO;MACLR,QAAQ,CAAC,SAAD,CAAR;IACD;EACF;;EAED,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,IAAD;MAAA,wBACE,QAAC,cAAD;QAAA,wBACE,QAAC,KAAD;UACE,WAAW,EAAC,OADd;UAEE,IAAI,EAAC,OAFP;UAGE,KAAK,EAAEC,KAHT;UAIE,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;QAJ3B;UAAA;UAAA;UAAA;QAAA,QADF,eAOE,QAAC,KAAD;UACE,WAAW,EAAC,SADd;UAEE,IAAI,EAAC,MAFP;UAGE,KAAK,EAAEd,QAHT;UAIE,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;QAJ9B;UAAA;UAAA;UAAA;QAAA,QAPF,eAaE,QAAC,KAAD;UACE,WAAW,EAAC,OADd;UAEE,IAAI,EAAC,UAFP;UAGE,KAAK,EAAEZ,QAHT;UAIE,QAAQ,EAAGU,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;QAJ9B;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAqBE,QAAC,eAAD;QAAA,WACGV,OAAO,iBACN,QAAC,SAAD;UAAW,KAAK,EAAE;YAAEW,KAAK,EAAE;UAAT,CAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAIE,QAAC,SAAD;UAAA,8CACoB,QAAC,IAAD;YAAM,EAAE,EAAC,SAAT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADpB;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE,QAAC,MAAD;UAAQ,OAAO,EAAER,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GArDuBX,U;UACLV,W;;;KADKU,U"},"metadata":{},"sourceType":"module"}